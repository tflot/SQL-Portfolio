CREATE TABLE marvels (
    ID INTEGER PRIMARY KEY,
    name TEXT,
    popularity INTEGER,
    alignment TEXT,
    gender TEXT, 
    height_m NUMERIC,
    weight_kg NUMERIC,
    hometown TEXT,
    intelligence INTEGER,
    strength INTEGER,
    speed INTEGER,
    durability INTEGER,
    energy_Projection INTEGER,
    fighting_Skills INTEGER);
    
INSERT INTO marvels VALUES(1, "Spider Man", 1, "Good", "Male", 1.78, 75.75, "USA", 4, 4, 3, 3, 1, 4); 
INSERT INTO marvels VALUES(2, "Iron Man", 20, "Neutral", "Male", 1.98, 102.58, "USA", 6, 6, 5, 6, 6, 4); 
INSERT INTO marvels VALUES(3, "Hulk", 18, "Neutral", "Male", 2.44, 635.29, "USA", 1, 7, 3, 7, 5, 4); 
INSERT INTO marvels VALUES(4, "Wolverine", 3, "Good", "Male", 1.6, 88.46, "Canada", 2, 4, 2, 4, 1, 7);
INSERT INTO marvels VALUES(5, "Thor", 5, "Good", "Male", 1.98, 290.3, "Asgard", 2, 7, 7, 6, 6, 4);
INSERT INTO marvels VALUES(6, "Green Goblin", 91, "Bad", "Male", 1.93, 174.63, "USA", 4, 4, 3, 4, 3, 3);
INSERT INTO marvels VALUES(7, "Magneto", 11, "Neutral", "Male", 1.88, 86.18, "Germany", 6, 3, 5, 4, 6, 4);
INSERT INTO marvels VALUES(8, "Thanos", 47, "Bad", "Male", 2.01, 446.79, "Titan", 6, 7, 7, 6, 6, 4);
INSERT INTO marvels VALUES(9, "Loki", 32, "Bad", "Male", 1.93, 238.14, "Jotunheim", 5, 5, 7, 6, 6, 3);
INSERT INTO marvels VALUES(10, "Doctor Doom", 19, "Bad", "Male", 2.01, 188.24, "Latveria", 6, 4, 5, 6, 6, 4);
INSERT INTO marvels VALUES(11, "Jean Grey", 8, "Good", "Female", 1.68, 52.16, "USA", 3, 2, 7, 7, 7, 4);
INSERT INTO marvels VALUES(12, "Rogue", 4, "Good", "Female", 1.73, 54.43, "USA", 7, 7, 7, 7, 7, 7);
INSERT INTO marvels VALUES(13, "Storm", 2, "Good", "Female", 1.80, 66, "Kenya", 2, 2, 3, 2, 5, 4);
INSERT INTO marvels VALUES(14, "Nightcrawler", 6, "Good", "Male", 1.75, 73, "Germany", 3, 2, 7, 2, 1, 3);
INSERT INTO marvels VALUES(15, "Gambit", 7, "Good", "Male", 1.88, 81, "USA", 2, 2, 2, 2, 2, 4);
INSERT INTO marvels VALUES(16, "Captain America", 9, "Good", "Male", 1.88, 108, "USA", 3, 3, 2, 3, 1, 6);
INSERT INTO marvels VALUES(17, "Cyclops", 10, "Good", "Male", 1.90, 88, "USA", 3, 2, 2, 2, 5, 4);
INSERT INTO marvels VALUES(18, "Emma Frost", 12, "Neutral", "Female", 1.78, 65, "USA", 4, 4, 2, 5, 5, 3);
INSERT INTO marvels VALUES(19, "Kitty Pryde", 13, "Good", "Female", 1.68, 50, "USA", 4, 2, 2, 3, 1, 5);
INSERT INTO marvels VALUES(20, "Daredevil", 14, "Good", "Male", 1.83, 91, "USA", 3, 3, 2, 2, 4, 5);
INSERT INTO marvels VALUES(21, "Punisher", 50, "Neutral", "Male", 1.85, 91, "USA", 3, 3, 2, 2, 1, 6);
INSERT INTO marvels VALUES(22, "Silver Surfer", 33, "Good", "Male", 1.93, 102, "Zenn-La", 3, 7, 7, 6, 7, 2);
INSERT INTO marvels VALUES(23, "Ghost Rider", 86, "Good", "Male", 1.88, 99, "USA", 2, 4, 3, 5, 4, 2);
INSERT INTO marvels VALUES(24, "Venom", 78, "Neutral", "Male", 1.90, 118, "USA", 3, 4, 2, 6, 1, 4);
INSERT INTO marvels VALUES(25, "Juggernaut", 76, "Neutral", "Male", 2.87, 862, "USA", 2, 7, 2, 7, 1, 4);
INSERT INTO marvels VALUES(26, "Professor X", 58, "Good", "Male", 1.83, 86, "USA", 5, 2, 2, 2, 5, 3);


/* What are the average, max, and min values in the data? */

#1. Popularity 

SELECT
    ROUND(AVG(popularity),2) AS avg_popularity,
    MIN(popularity) AS min_popularity,
    MAX(popularity) AS max_popularity
FROM marvels;

#2. Height

SELECT
    ROUND(AVG(height_m),2) AS avg_height_m,
    MAX(height_m) AS max_height_m,
    MIN(height_m) AS min_height_m
FROM marvels;

#3. Weight

SELECT
    ROUND(AVG(weight_kg),2) AS avg_weight_kg,
    MAX(weight_kg) AS max_weight_kg,
    MIN(weight_kg) AS min_weight_kg
FROM marvels;

#4. Intelligence

SELECT
    ROUND(AVG(intelligence),2) AS avg_intelligence,
    MAX(intelligence) AS max_intelligence,
    MIN(intelligence) AS min_intelligence
FROM marvels;

#5. Strength

SELECT
    ROUND(AVG(strength),2) AS avg_strength,
    MAX(strength) AS max_strength,
    MIN(strength) AS min_strength
FROM marvels;

#6. Speed

SELECT
    ROUND(AVG(speed),2) AS avg_speed,
    MAX(speed) AS max_speed,
    MIN(speed) AS min_speed
FROM marvels;

#7. Fighting Skills

SELECT
    ROUND(AVG(fighting_skills),2) AS avg_fighting_skills,
    MAX(fighting_skills) AS max_fighting_skills,
    MIN(fighting_skills) AS min_fighting_skills
FROM marvels;


/* What are the average values (per gender) in the data? */

#1. Popularity

SELECT
    ROUND(AVG(popularity),2) AS avg_popularity_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(popularity),2) AS avg_popularity_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#2. Height

SELECT
    ROUND(AVG(height_m),2) AS avg_height_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(height_m),2) AS avg_height_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#3. Weight

SELECT
    ROUND(AVG(weight_kg),2) AS avg_weight_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(weight_kg),2) AS avg_weight_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#4. Intelligence

SELECT
    ROUND(AVG(intelligence),2) AS avg_intelligence_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(intelligence),2) AS avg_intelligence_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#5. Strength

SELECT
    ROUND(AVG(strength),2) AS avg_strength_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(strength),2) AS avg_strength_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#6. Speed

SELECT
    ROUND(AVG(speed),2) AS avg_speed_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(speed),2) AS avg_speed_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';

#7. Fighting Skills

SELECT
    ROUND(AVG(fighting_skills),2) AS avg_fighting_skills_female
FROM marvels
GROUP BY gender
HAVING gender = 'Female';

SELECT
    ROUND(AVG(fighting_skills),2) AS avg_fighting_skills_male
FROM marvels
GROUP BY gender
HAVING gender = 'Male';


/* What ways are there to group the data values that don't exist yet using CASE? */

#1. Potential for Good 

SELECT
    name,
    CASE
        WHEN alignment = 'Good'AND intelligence >= (
            SELECT AVG(intelligence)
            FROM marvels)
        THEN "high"
        WHEN alignment = 'Bad' AND intelligence >= (
            SELECT AVG(intelligence)
            FROM marvels)
        THEN "low"
        ELSE "neutral"
        END AS "potential for good"
FROM marvels
ORDER BY "potential for good";

#2. Strength Categories

SELECT
    name,
    CASE
        WHEN strength >= 6 THEN "super strong"
        WHEN strength BETWEEN 3 AND 5 THEN "strong"
        ELSE "weak"
        END AS "strength meter"
FROM marvels
ORDER BY strength DESC;

#3. Popularity Categories

SELECT
    name,
    CASE
        WHEN popularity >= 60 THEN 'least popular'
        WHEN popularity BETWEEN 20 AND 59 THEN 'average'
        ELSE 'most popular'
        END AS "popularity contest"
FROM marvels
ORDER BY popularity ASC;


/* What interesting ways are there to filter the data? */

#1. What is the average weight of a "good" superhero, by hometown? --

SELECT
    hometown,
    ROUND(AVG(weight_kg),2) AS avg_weight_good
FROM marvels
GROUP BY hometown
HAVING alignment = 'Good'
ORDER BY avg_weight_good DESC;

#2. Which male superheroes have above average popularity?

SELECT
    name,
    popularity AS above_avg_popularity_male
FROM marvels
WHERE popularity < (
    SELECT AVG(popularity)
    FROM marvels
    WHERE gender = 'Male')
ORDER BY above_avg_popularity_male ASC;

#3. Which superheroes from the United States are the "most popular"?

SELECT
    name,
    popularity
FROM marvels
WHERE hometown = 'USA' AND popularity < 20
ORDER BY popularity;

#4. Which "bad" superheroes are from the USA?

SELECT
    name
FROM marvels
WHERE alignment = 'Bad' AND hometown = 'USA';

#5. Which superheroes are either stronger than average or faster than average? --

SELECT
    name
FROM marvels
WHERE strength > (
    SELECT
        AVG(strength)
    FROM marvels)
OR speed > (
    SELECT
        AVG(speed)
    FROM marvels);
